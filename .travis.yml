language: python

env:
  global:
    - CIBW_SKIP="cp27-* pp27-*"
    #- CIBW_BEFORE_BUILD_LINUX="yum install -y zlib-devel sqlite-devel"
    - CIBW_BEFORE_BUILD_LINUX="sqlite3 --version; curl -O http://zlib.net/zlib-1.2.11.tar.gz;tar xzf zlib-1.2.11.tar.gz;cd zlib-1.2.11;./configure;make;make install;"
    - CIBW_BEFORE_BUILD_MACOS="sqlite3 --version; brew install zlib"
    - PIP=pip3
    - TWINE_REPOSITORY=pypi
    - TWINE_REPOSITORY_URL=https://upload.pypi.org/legacy/
    #- CPPFLAGS=--coverage

matrix:
  include:
    - sudo: required
      services:
        - docker
    - os: osx
      language: generic

before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      git -C "$(brew --repo)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git;
    fi
  - $PIP install cpp-coveralls
  - $PIP install pyfaidx
  - if [ "$TRAVIS_OS_NAME" != "osx" ]; then
      wget https://www.sqlite.org/2019/sqlite-autoconf-3290000.tar.gz;
      tar xzf sqlite-autoconf-3290000.tar.gz;
      cd sqlite-autoconf-3290000;
      ./configure;
      make;
      sudo make install;
      cd ..;
      wget http://zlib.net/zlib-1.2.11.tar.gz;
      tar xzf zlib-1.2.11.tar.gz;
      cd zlib-1.2.11;
      ./configure;
      make;
      sudo make install;
      cd ..;
    fi
      #export LD_LIBRARY_PATH="/usr/local/lib";
    #fi
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

install:
  - $PIP install -U setuptools
  - $PIP install -U cibuildwheel
  - cibuildwheel --output-dir wheelhouse
  - python3 setup.py sdist --dist-dir wheelhouse

script:
  - ls wheelhouse
  - if [ "$TRAVIS_TAG" != "" ]; then
      python -m pip install -U twine;
      python -m twine upload --skip-existing wheelhouse/*;
    fi
  - if [ "$TRAVIS_OS_NAME" != "osx" ]; then
      rm -rf build;
      rm pyfastx.cpython*;
      export CPPFLAGS=--coverage;
      sqlite3 --version;
      python3 setup.py test;
    fi

after_success:
  - if [ "$TRAVIS_OS_NAME" != "osx" ]; then
      bash <(curl -s https://codecov.io/bash);
      coveralls --build-root .;
    fi

addons:
  coverity_scan:
    project:
      name: "lmdu/pyfastx"
      description: "a tool for random access to fasta/q"
    notification_email: adullb@qq.com
    build_command_prepend: "rm -rf build"
    build_command: "python3 setup.py build_ext"
    branch_pattern: coverity_scan