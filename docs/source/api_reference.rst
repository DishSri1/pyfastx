API Reference
=============

pyfastx.version
---------------

.. py:function:: pyfastx.version()

	Get current version of pyfastx

	:return: version of pyfastx

	:rtype: str

pyfastx.Fasta
-------------

.. py:class:: pyfastx.Fasta(file_name, uppercase=True, build_index=True)

	Read and parse fasta files. Fasta can be used as dict or list, you can use index or sequence name to get a sequence object, e.g. ``fasta[0]``, ``fasta['seq1']``

	:param str file_name: the file path of input FASTA file

	:param bool uppercase: always output uppercase sequence, default: ``True``

	:param bool build_index: build index for random access to FASTA sequence, default: ``True``

	:return: Fasta object

	.. py:attribute:: file_name

		FASTA file path

	.. py:attribute:: size

		total length of sequences in FASTA file

	.. py:attribute:: gc_content

		GC content of whole sequences in FASTA file, return a float value

	.. py:attribute:: gc_skew

		GC skew of whole sequences in FASTA file, learn more about `GC skew <https://en.wikipedia.org/wiki/GC_skew>`_

		New in ``pyfastx`` 0.3.8

	.. py:attribute:: composition

		nucleotide composition in FASTA file, a dict contains counts of A, T, G, C and N (unkown nucleotide base)

	.. py:attribute:: longest

		get (name, length) of longest sequence in FASTA file

		New in ``pyfastx`` 0.3.0

	.. py:attribute:: shortest

		get (name, length) of shortest sequence in FASTA file

		New in ``pyfastx`` 0.3.0

	.. py:attribute:: mean

		get average length of sequences in FASTA file

		New in ``pyfastx`` 0.3.0

	.. py:attribute:: median

		get median length of sequences in FASTA file

		New in ``pyfastx`` 0.3.0

	.. py:method:: fetch(name, intervals, strand='+')

		truncate subsequences from a given sequence by a start and end coordinate or a list of coordinates

		:param str name: sequence name

		:param list/tuple intervals: list of [start, end] coordinates

		:param str strand: sequence strand, ``+`` indicates sense strand, ``-`` indicates antisense strand, default: '+'

		.. note::

			intervals can be a list or tuple with start and end position e.g. (10, 20).
			intervals also can be a list or tuple with multiple coordinates e.g. [(10, 20), (50,70)]

		:return: sliced subsequences

		:rtype: str

	.. py:method:: build_index()

		build index for FASTA file

	.. py:method:: rebuild_index()

		rebuild index for FASTA file

	.. py:method:: keys()

		get all names of sequences

		:return: an Identifier object

	.. py:method:: count(n)

		get counts of sequences whose length >= n bp

		New in ``pyfastx`` 0.3.0

		:param int n: number of bases

		:return: sequence counts

		:rtype: int

	.. py:method:: nl(quantile)

		calculate assembly N50 and L50, learn more about `N50,L50 <https://www.molecularecologist.com/2017/03/whats-n50/>`_

		New in ``pyfastx`` 0.3.0

		:param int quantile: a number between 0 and 100, default 50

		:return: (N50, L50)

		:rtype: tuple

pyfastx.Sequence
----------------

.. py:class:: pyfastx.Sequence

	Readonly sequence object generated by fasta object, Sequence can be treated as a list and support slicing e.g. ``seq[10:20]``

	.. py:attribute:: id

		sequence id or order number in FASTA file

	.. py:attribute:: name

		sequence name

	.. py:attribute:: description

		Get sequence description after name in sequence header

		New in ``pyfastx`` 0.3.1

	.. py:attribute:: start

		start position of sequence

	.. py:attribute:: end

		end position of sequence

	.. py:attribute:: gc_content

		GC content of current sequence, return a float value

	.. py:attribute:: gc_skew

		GC skew of current sequence, learn more about `GC skew <https://en.wikipedia.org/wiki/GC_skew>`_

	.. py:attribute:: composition

		nucleotide composition of sequence, a dict contains counts of A, T, G, C and N (unkown nucleotide base)

	.. py:attribute:: seq

		get the raw string of sequence in sense strand

	.. py:attribute:: reverse

		get the raw string of reversed sequence

	.. py:attribute:: complement

		get the raw string of complement sequence

	.. py:attribute:: antisense

		get the raw string of sequence in antisense strand, corresponding to reversed and complement sequence

	.. py:method:: search(subseq, strand='+')

		Search for subsequence from given sequence and get the start position of the first occurrence

		New in ``pyfastx`` 0.3.6

		:param string subseq: a subsequence for search

		:param string strand: sequence strand + or -, default +

		:return: if found subsequence return one-based start position, if not return None

		:rtype: int or None

pyfastx.Fastq
-------------

New in ``pyfastx`` 0.4.0

.. py:class:: pyfastx.Fastq(file_name, build_index=True, phred=33)

	Read and parse fastq file

	:param str file_name: input fastq file path

	:param bool build_index: build index for random access to FASTQ reads, default: ``True``

	:param int phred: phred was used to convert quality ascii to quality int value, usually is 33 or 64, default ``33``

	:return: Fastq object

	.. py:attribute:: file_name

		FASTQ file path

	.. py:attribute:: size

		total bases in FASTQ file

	.. py:attribute:: gc_content

		GC content of whole FASTQ file

	.. py:attribute:: composition

		base composition in FASTQ file, a dict contains counts of A, T, G, C and N (unkown nucleotide base)

pyfastx.Read
------------

New in ``pyfastx`` 0.4.0

.. py:class:: pyfastx.Read

	Readonly read object for obtaining read information, generated by fastq object

	.. py:attribute:: id

		read id or order number in FASTQ file

	.. py:attribute:: name

		read name excluding '@'

	.. py:attribute:: seq

		get read sequence string

	.. py:attribute:: qual

		get read quality ascii string

	.. py:attriubte:: quali

		get read quality integer value (ascii - phred), return a list

pyfastx.Identifier
------------------

.. py:class:: pyfastx.Identifier

	Identifier is a readonly and list-like object, contains all names of sequences
